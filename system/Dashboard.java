/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kwanza.tukule.management.system;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Mariwa
 */
public class Dashboard extends javax.swing.JFrame {
Connection con = null;
ResultSet rs = null;
PreparedStatement pst = null;
public String user;
public String role;
public String CustomerId;
public String CustomerName;
public String CustomerNumber;
public String CustomerDeliverer;
public String CustomerLocation;
public String CustomerStatus;
public Icon icon = new javax.swing.ImageIcon(getClass().getResource("kwanza tukule icon.png"));
          
    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        sideBar.setSize(0,0);
        menuClose.setSize(0,0);
        customersPanel.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        summaryPanel.setSize(0,0);
        addCustomerPanel.setSize(0,0);
        addStockBackButton.setSize(0,0);
        addCustomerBackButton.setSize(0,0);
        addCustomerBackButton1.setSize(0,0);
        addStockPanel.setSize(0,0);
        ordersPanel.setSize(0,0);
        stockPanel.setSize(0,0);
        printCustomerButton.setSize(0,0);
        setIcon();
    }

    public Dashboard(String username) {
         this.user=username;
         initComponents();
         customersPanel.setSize(0,0);
        summaryPanel.setSize(0,0);
        addCustomerPanel.setSize(0,0);
        addStockBackButton.setSize(0,0);
        addCustomerBackButton.setSize(0,0);
        addStockPanel.setSize(0,0);
        addCustomerBackButton1.setSize(0,0);
        ordersPanel.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        stockPanel.setSize(0,0);
        printCustomerButton.setSize(0,0);
        setIcon();
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        nullPanel = new javax.swing.JPanel();
        menuOpen = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sideBar = new javax.swing.JPanel();
        customerSideBar = new javax.swing.JLabel();
        menuClose = new javax.swing.JLabel();
        stockSideBar = new javax.swing.JLabel();
        orderSideBar = new javax.swing.JLabel();
        summarySideBar = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        customersPanel = new javax.swing.JPanel();
        customersPageTitle = new javax.swing.JLabel();
        customerSearchDeliverer = new javax.swing.JTextField();
        customerSearchName = new javax.swing.JTextField();
        addCustomerButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        customersSaveChangesButton = new javax.swing.JButton();
        blacklistedSaveChangsButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        customersTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        blackListedTable = new javax.swing.JTable();
        showAllCustomersButton = new javax.swing.JButton();
        customerBlacklist = new javax.swing.JButton();
        customerDelete = new javax.swing.JButton();
        blacklistedRestore = new javax.swing.JButton();
        blacklistedDelete = new javax.swing.JButton();
        stockPanel = new javax.swing.JPanel();
        stockPageTitle = new javax.swing.JLabel();
        stockSearchName = new javax.swing.JTextField();
        addStockButton = new javax.swing.JButton();
        stockSaveChangesButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        showAllStockButton = new javax.swing.JButton();
        stockDeleteButton = new javax.swing.JButton();
        ordersPanel = new javax.swing.JPanel();
        ordersPageTitle = new javax.swing.JLabel();
        ordersSearchName = new javax.swing.JTextField();
        addOrderButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersTable = new javax.swing.JTable();
        ordersSaveButton = new javax.swing.JButton();
        showAllOrdersButton = new javax.swing.JButton();
        summaryPanel = new javax.swing.JPanel();
        summaryPageTitle = new javax.swing.JLabel();
        totalSalesTodayLabel = new javax.swing.JLabel();
        revenueRealizedTodayLabel = new javax.swing.JLabel();
        totalPaidViaMpesaTodayLabel = new javax.swing.JLabel();
        totalPaidInCashTodayLabel = new javax.swing.JLabel();
        totalDebtPaidInMpesaLabel = new javax.swing.JLabel();
        totalDebtPaidInCashLabel = new javax.swing.JLabel();
        totalBankedTodayLabel = new javax.swing.JLabel();
        expensesTodayLabel = new javax.swing.JLabel();
        cashInHandLabel = new javax.swing.JLabel();
        addStockBackButton = new javax.swing.JButton();
        addCustomerBackButton = new javax.swing.JButton();
        addCustomerPanel = new javax.swing.JPanel();
        addCustomerPageTitle = new javax.swing.JLabel();
        addCustomerNameLabel = new javax.swing.JLabel();
        addCustomerNumberLabel = new javax.swing.JLabel();
        addCustomerDelivererLabel = new javax.swing.JLabel();
        addCustomerLocationLabel = new javax.swing.JLabel();
        addCustomerNameTextField = new javax.swing.JTextField();
        addCustomerNumberTextField = new javax.swing.JTextField();
        addCustomerLocationTextField = new javax.swing.JTextField();
        addCustomerDelivererTextField = new javax.swing.JTextField();
        addCustomerSaveButton = new javax.swing.JButton();
        addStockPanel = new javax.swing.JPanel();
        addStockPageTitle = new javax.swing.JLabel();
        addStockNameLabel = new javax.swing.JLabel();
        addStockQuantityLabel = new javax.swing.JLabel();
        addStockPriceLabel = new javax.swing.JLabel();
        addStockPriceTextField = new javax.swing.JTextField();
        addStockNameTextField = new javax.swing.JTextField();
        addStockQuantityTextField = new javax.swing.JTextField();
        addStockSaveButton = new javax.swing.JButton();
        printCustomerButton = new javax.swing.JButton();
        customersPanel1 = new javax.swing.JPanel();
        addCustomerButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        customersPageTitle1 = new javax.swing.JLabel();
        customerSearchDeliverer1 = new javax.swing.JTextField();
        customerSearchName1 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        customersTable1 = new javax.swing.JTable();
        customersSaveChangesButton1 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        blackListedTable1 = new javax.swing.JTable();
        showAllCustomersButton1 = new javax.swing.JButton();
        customerDelete1 = new javax.swing.JButton();
        addCustomerBackButton1 = new javax.swing.JButton();
        avatarIcon = new javax.swing.JLabel();
        ordersPanel1 = new javax.swing.JPanel();
        ordersSearchName1 = new javax.swing.JTextField();
        addOrderButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ordersTable1 = new javax.swing.JTable();
        ordersPageTitle1 = new javax.swing.JLabel();
        showAllOrdersButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kwanza Tukule | Dashboard");

        setPreferredSize(new java.awt.Dimension(1650, 1080));
        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kwanza/tukule/management/system/kwanza tukule logo.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 0, 190, 80);
        jPanel1.add(userLabel);
        userLabel.setBounds(1688, 39, 0, 0);

        usernameLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        usernameLabel.setText(user);
        jPanel1.add(usernameLabel);
        usernameLabel.setBounds(1000, 20, 200, 20);

        nullPanel.setLayout(null);
        jPanel1.add(nullPanel);
        nullPanel.setBounds(210, 60, 1190, 730);

        menuOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kwanza/tukule/management/system/menu.png"))); // NOI18N
        menuOpen.setText("jLabel2");
        menuOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuOpenMousePressed(evt);
            }
        });
        jPanel1.add(menuOpen);
        menuOpen.setBounds(10, 90, 190, 60);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("Menu");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(40, 110, 60, 22);

        sideBar.setBackground(new java.awt.Color(51, 204, 0));
        sideBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sideBar.setForeground(new java.awt.Color(255, 255, 255));

        customerSideBar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        customerSideBar.setText("Customers");
        customerSideBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                customerSideBarMousePressed(evt);
            }
        });

        menuClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kwanza/tukule/management/system/menuClose.png"))); // NOI18N
        menuClose.setText("jLabel3");
        menuClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuCloseMousePressed(evt);
            }
        });

        stockSideBar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        stockSideBar.setText("Stock");
        stockSideBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                stockSideBarMousePressed(evt);
            }
        });

        orderSideBar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        orderSideBar.setText("Orders");
        orderSideBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                orderSideBarMousePressed(evt);
            }
        });

        summarySideBar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        summarySideBar.setText("Summary");
        summarySideBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                summarySideBarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout sideBarLayout = new javax.swing.GroupLayout(sideBar);
        sideBar.setLayout(sideBarLayout);
        sideBarLayout.setHorizontalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarLayout.createSequentialGroup()
                .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sideBarLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(menuClose, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sideBarLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(summarySideBar)
                            .addComponent(orderSideBar)
                            .addComponent(stockSideBar)
                            .addComponent(customerSideBar))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sideBarLayout.setVerticalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(menuClose, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(customerSideBar)
                .addGap(40, 40, 40)
                .addComponent(stockSideBar)
                .addGap(41, 41, 41)
                .addComponent(orderSideBar)
                .addGap(48, 48, 48)
                .addComponent(summarySideBar)
                .addContainerGap(347, Short.MAX_VALUE))
        );

        jPanel1.add(sideBar);
        sideBar.setBounds(0, 80, 0, 720);

        logoutButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        logoutButton.setText("LOGOUT");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        jPanel1.add(logoutButton);
        logoutButton.setBounds(1130, 20, 106, 29);

        customersPageTitle.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        customersPageTitle.setText("Customers");

        customerSearchDeliverer.setText("Search by deliverer...");
        customerSearchDeliverer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchDelivererActionPerformed(evt);
            }
        });

        customerSearchName.setText("Search by name...");
        customerSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchNameActionPerformed(evt);
            }
        });

        addCustomerButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addCustomerButton.setText("Add Customer");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel3.setText("Blacklisted");

        customersSaveChangesButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        customersSaveChangesButton.setText("Save");
        customersSaveChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customersSaveChangesButtonActionPerformed(evt);
            }
        });

        blacklistedSaveChangsButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        blacklistedSaveChangsButton.setText("Save");
        blacklistedSaveChangsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blacklistedSaveChangsButtonActionPerformed(evt);
            }
        });

        customersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "#", "Name", "Mobile No.", "Location", "Deliverer", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(customersTable);
        if (customersTable.getColumnModel().getColumnCount() > 0) {
            customersTable.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        blackListedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "#", "Name", "Location", "Amount Paid", "Balance"
            }
        ));
        jScrollPane4.setViewportView(blackListedTable);
        if (blackListedTable.getColumnModel().getColumnCount() > 0) {
            blackListedTable.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        showAllCustomersButton.setText("All Customers");
        showAllCustomersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllCustomersButtonActionPerformed(evt);
            }
        });

        customerBlacklist.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        customerBlacklist.setText("Blacklist");
        customerBlacklist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerBlacklistActionPerformed(evt);
            }
        });

        customerDelete.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        customerDelete.setText("Delete");
        customerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerDeleteActionPerformed(evt);
            }
        });

        blacklistedRestore.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        blacklistedRestore.setText("Restore");
        blacklistedRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blacklistedRestoreActionPerformed(evt);
            }
        });

        blacklistedDelete.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        blacklistedDelete.setText("Delete");
        blacklistedDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blacklistedDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customersPanelLayout = new javax.swing.GroupLayout(customersPanel);
        customersPanel.setLayout(customersPanelLayout);
        customersPanelLayout.setHorizontalGroup(
            customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customersPanelLayout.createSequentialGroup()
                .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1021, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customersPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1021, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(customersPanelLayout.createSequentialGroup()
                                            .addComponent(customersPageTitle)
                                            .addGap(66, 66, 66)
                                            .addComponent(customerSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(customerSearchDeliverer, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(addCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(customersPanelLayout.createSequentialGroup()
                                        .addComponent(customersSaveChangesButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(customerBlacklist)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(customerDelete))
                                    .addGroup(customersPanelLayout.createSequentialGroup()
                                        .addComponent(blacklistedSaveChangsButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blacklistedRestore)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blacklistedDelete))))
                            .addGroup(customersPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))))
                    .addGroup(customersPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(showAllCustomersButton)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        customersPanelLayout.setVerticalGroup(
            customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customersPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customersPageTitle)
                    .addComponent(customerSearchDeliverer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showAllCustomersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customersSaveChangesButton)
                    .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(customerBlacklist)
                        .addComponent(customerDelete)))
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blacklistedSaveChangsButton)
                    .addComponent(blacklistedRestore)
                    .addComponent(blacklistedDelete))
                .addContainerGap(609, Short.MAX_VALUE))
        );

        jPanel1.add(customersPanel);
        customersPanel.setBounds(130, 120, 1082, 1261);

        stockPageTitle.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        stockPageTitle.setText("Stock");

        stockSearchName.setText("Search by name...");
        stockSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockSearchNameActionPerformed(evt);
            }
        });

        addStockButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addStockButton.setText("Add Stock");
        addStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStockButtonActionPerformed(evt);
            }
        });

        stockSaveChangesButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        stockSaveChangesButton.setText("Save");
        stockSaveChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockSaveChangesButtonActionPerformed(evt);
            }
        });

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "#", "StockName", "Price/Unit", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(stockTable);
        if (stockTable.getColumnModel().getColumnCount() > 0) {
            stockTable.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        showAllStockButton.setText("All Stock");
        showAllStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllStockButtonActionPerformed(evt);
            }
        });

        stockDeleteButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        stockDeleteButton.setText("Delete");
        stockDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout stockPanelLayout = new javax.swing.GroupLayout(stockPanel);
        stockPanel.setLayout(stockPanelLayout);
        stockPanelLayout.setHorizontalGroup(
            stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showAllStockButton)
                    .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(stockPanelLayout.createSequentialGroup()
                            .addComponent(stockPageTitle)
                            .addGap(258, 258, 258)
                            .addComponent(stockSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(127, 127, 127)
                            .addComponent(addStockButton))
                        .addComponent(jScrollPane5)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stockPanelLayout.createSequentialGroup()
                            .addComponent(stockSaveChangesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(stockDeleteButton))))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        stockPanelLayout.setVerticalGroup(
            stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addStockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(stockPageTitle)
                        .addComponent(stockSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showAllStockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stockSaveChangesButton)
                    .addComponent(stockDeleteButton))
                .addContainerGap(167, Short.MAX_VALUE))
        );

        jPanel1.add(stockPanel);
        stockPanel.setBounds(130, 230, 1190, 726);

        ordersPageTitle.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        ordersPageTitle.setText("Orders");

        ordersSearchName.setText("Search by name...");
        ordersSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordersSearchNameActionPerformed(evt);
            }
        });

        addOrderButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addOrderButton.setText("Add Order");
        addOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderButtonActionPerformed(evt);
            }
        });

        ordersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "#", "Name", "Mobile No.", "Item", "Cost", "C/F/Debt", "M-Pesa", "Cash", "Balance", "Banked", "Slip No.", "Banked by"
            }
        ));
        jScrollPane1.setViewportView(ordersTable);
        if (ordersTable.getColumnModel().getColumnCount() > 0) {
            ordersTable.getColumnModel().getColumn(6).setHeaderValue("M-Pesa");
            ordersTable.getColumnModel().getColumn(7).setHeaderValue("Cash");
            ordersTable.getColumnModel().getColumn(8).setHeaderValue("Balance");
            ordersTable.getColumnModel().getColumn(9).setHeaderValue("Banked");
            ordersTable.getColumnModel().getColumn(10).setHeaderValue("Slip No.");
            ordersTable.getColumnModel().getColumn(11).setHeaderValue("Banked by");
        }

        ordersSaveButton.setText("Save");

        showAllOrdersButton.setText("All Orders");
        showAllOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllOrdersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ordersPanelLayout = new javax.swing.GroupLayout(ordersPanel);
        ordersPanel.setLayout(ordersPanelLayout);
        ordersPanelLayout.setHorizontalGroup(
            ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordersPanelLayout.createSequentialGroup()
                .addGroup(ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ordersPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 905, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ordersSaveButton))
                    .addGroup(ordersPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(ordersPageTitle)
                        .addGap(157, 157, 157)
                        .addComponent(ordersSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174)
                        .addComponent(addOrderButton))
                    .addGroup(ordersPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(showAllOrdersButton)))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        ordersPanelLayout.setVerticalGroup(
            ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordersPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ordersSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ordersPageTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showAllOrdersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ordersSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(568, 568, 568))
        );

        jPanel1.add(ordersPanel);
        ordersPanel.setBounds(110, 350, 1190, 736);

        summaryPageTitle.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        summaryPageTitle.setText("Summary");

        totalSalesTodayLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        totalSalesTodayLabel.setText("Total Sales Today:");

        revenueRealizedTodayLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        revenueRealizedTodayLabel.setText("Revenue Realized Today:");

        totalPaidViaMpesaTodayLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        totalPaidViaMpesaTodayLabel.setText("Total Paid via M-Pesa Today:");

        totalPaidInCashTodayLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        totalPaidInCashTodayLabel.setText("Total Paid in Cash Today:");

        totalDebtPaidInMpesaLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        totalDebtPaidInMpesaLabel.setText("Total Debt Paid in M-Pesa:");

        totalDebtPaidInCashLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        totalDebtPaidInCashLabel.setText("Total Debt Paid in Cash:");

        totalBankedTodayLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        totalBankedTodayLabel.setText("Total Banked Today:");

        expensesTodayLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        expensesTodayLabel.setText("Expenses Today:");

        cashInHandLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        cashInHandLabel.setText("Cash in Hand:");

        javax.swing.GroupLayout summaryPanelLayout = new javax.swing.GroupLayout(summaryPanel);
        summaryPanel.setLayout(summaryPanelLayout);
        summaryPanelLayout.setHorizontalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(summaryPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(summaryPageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(summaryPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cashInHandLabel)
                            .addComponent(totalSalesTodayLabel)
                            .addComponent(expensesTodayLabel)
                            .addComponent(totalBankedTodayLabel)
                            .addComponent(totalDebtPaidInCashLabel)
                            .addComponent(totalDebtPaidInMpesaLabel)
                            .addComponent(totalPaidInCashTodayLabel)
                            .addComponent(totalPaidViaMpesaTodayLabel)
                            .addComponent(revenueRealizedTodayLabel))))
                .addContainerGap(875, Short.MAX_VALUE))
        );
        summaryPanelLayout.setVerticalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(summaryPageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalSalesTodayLabel)
                .addGap(34, 34, 34)
                .addComponent(revenueRealizedTodayLabel)
                .addGap(40, 40, 40)
                .addComponent(totalPaidViaMpesaTodayLabel)
                .addGap(49, 49, 49)
                .addComponent(totalPaidInCashTodayLabel)
                .addGap(46, 46, 46)
                .addComponent(totalDebtPaidInMpesaLabel)
                .addGap(53, 53, 53)
                .addComponent(totalDebtPaidInCashLabel)
                .addGap(48, 48, 48)
                .addComponent(totalBankedTodayLabel)
                .addGap(44, 44, 44)
                .addComponent(expensesTodayLabel)
                .addGap(43, 43, 43)
                .addComponent(cashInHandLabel)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        jPanel1.add(summaryPanel);
        summaryPanel.setBounds(110, 470, 1190, 730);

        addStockBackButton.setText("< Back");
        addStockBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStockBackButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addStockBackButton);
        addStockBackButton.setBounds(250, 20, 0, 10);

        addCustomerBackButton.setText("< Back");
        addCustomerBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerBackButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addCustomerBackButton);
        addCustomerBackButton.setBounds(230, 20, 87, 0);

        addCustomerPageTitle.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        addCustomerPageTitle.setText("Add Customer");

        addCustomerNameLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addCustomerNameLabel.setText("Customer Name:");

        addCustomerNumberLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addCustomerNumberLabel.setText("Mobile No. :");

        addCustomerDelivererLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addCustomerDelivererLabel.setText("Deliverer:");

        addCustomerLocationLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addCustomerLocationLabel.setText("Location:");

        addCustomerNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerNumberTextFieldActionPerformed(evt);
            }
        });

        addCustomerSaveButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addCustomerSaveButton.setText("Add");
        addCustomerSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerSaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCustomerPanelLayout = new javax.swing.GroupLayout(addCustomerPanel);
        addCustomerPanel.setLayout(addCustomerPanelLayout);
        addCustomerPanelLayout.setHorizontalGroup(
            addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCustomerPanelLayout.createSequentialGroup()
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCustomerPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(addCustomerPageTitle))
                    .addGroup(addCustomerPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addCustomerDelivererLabel)
                            .addComponent(addCustomerNameLabel)
                            .addComponent(addCustomerLocationLabel)
                            .addComponent(addCustomerNumberLabel))
                        .addGap(18, 18, 18)
                        .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCustomerDelivererTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCustomerLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCustomerNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addCustomerPanelLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(addCustomerSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        addCustomerPanelLayout.setVerticalGroup(
            addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCustomerPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(addCustomerPageTitle)
                .addGap(65, 65, 65)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCustomerNameLabel)
                    .addComponent(addCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCustomerNumberLabel)
                    .addComponent(addCustomerNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCustomerLocationLabel)
                    .addComponent(addCustomerLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96)
                .addGroup(addCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCustomerDelivererLabel)
                    .addComponent(addCustomerDelivererTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(addCustomerSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        jPanel1.add(addCustomerPanel);
        addCustomerPanel.setBounds(50, 220, 1190, 730);

        addStockPageTitle.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        addStockPageTitle.setText("Add Stock");

        addStockNameLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addStockNameLabel.setText("Stock Name:");

        addStockQuantityLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addStockQuantityLabel.setText("Quantity:");

        addStockPriceLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addStockPriceLabel.setText("Price:");

        addStockSaveButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addStockSaveButton.setText("Add");
        addStockSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStockSaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStockPanelLayout = new javax.swing.GroupLayout(addStockPanel);
        addStockPanel.setLayout(addStockPanelLayout);
        addStockPanelLayout.setHorizontalGroup(
            addStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStockPanelLayout.createSequentialGroup()
                .addGroup(addStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addStockPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(addStockPageTitle))
                    .addGroup(addStockPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(addStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addStockQuantityLabel)
                            .addComponent(addStockPriceLabel)
                            .addComponent(addStockNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addStockNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addStockPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addStockQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addStockPanelLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(addStockSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(277, Short.MAX_VALUE))
        );
        addStockPanelLayout.setVerticalGroup(
            addStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStockPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(addStockPageTitle)
                .addGap(102, 102, 102)
                .addGroup(addStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStockNameLabel)
                    .addComponent(addStockNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89)
                .addGroup(addStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStockPriceLabel)
                    .addComponent(addStockPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106)
                .addGroup(addStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStockQuantityLabel)
                    .addComponent(addStockQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(addStockSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );

        jPanel1.add(addStockPanel);
        addStockPanel.setBounds(40, 150, 1190, 730);

        printCustomerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kwanza/tukule/management/system/printer.png"))); // NOI18N
        printCustomerButton.setText("Print");
        printCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printCustomerButtonActionPerformed(evt);
            }
        });
        jPanel1.add(printCustomerButton);
        printCustomerButton.setBounds(250, 9, 65, 0);

        addCustomerButton1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addCustomerButton1.setText("Add Customer");
        addCustomerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel4.setText("Blacklisted");

        customersPageTitle1.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        customersPageTitle1.setText("Customers");

        customerSearchDeliverer1.setText("Search by deliverer...");
        customerSearchDeliverer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchDeliverer1ActionPerformed(evt);
            }
        });

        customerSearchName1.setText("Search by name...");
        customerSearchName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchName1ActionPerformed(evt);
            }
        });

        customersTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "#", "Name", "Mobile No.", "Location", "Deliverer", "Status"
            }
        ));
        jScrollPane6.setViewportView(customersTable1);
        if (customersTable1.getColumnModel().getColumnCount() > 0) {
            customersTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        customersSaveChangesButton1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        customersSaveChangesButton1.setText("Save");
        customersSaveChangesButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customersSaveChangesButton1ActionPerformed(evt);
            }
        });

        blackListedTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "#", "Name", "Location", "Amount Paid", "Balance"
            }
        ));
        jScrollPane7.setViewportView(blackListedTable1);
        if (blackListedTable1.getColumnModel().getColumnCount() > 0) {
            blackListedTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        showAllCustomersButton1.setText("All Customers");
        showAllCustomersButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllCustomersButton1ActionPerformed(evt);
            }
        });

        customerDelete1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        customerDelete1.setText("Delete");
        customerDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerDelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customersPanel1Layout = new javax.swing.GroupLayout(customersPanel1);
        customersPanel1.setLayout(customersPanel1Layout);
        customersPanel1Layout.setHorizontalGroup(
            customersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customersPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showAllCustomersButton1)
                .addContainerGap(1050, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customersPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customersPanel1Layout.createSequentialGroup()
                .addGroup(customersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(customersPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(customersSaveChangesButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerDelete1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, customersPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7))
                    .addGroup(customersPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6))
                    .addGroup(customersPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(customersPageTitle1)
                        .addGap(66, 66, 66)
                        .addComponent(customerSearchName1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(customerSearchDeliverer1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(addCustomerButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(90, 90, 90))
        );
        customersPanel1Layout.setVerticalGroup(
            customersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customersPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(customersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customersPageTitle1)
                    .addComponent(customerSearchDeliverer1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerSearchName1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustomerButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(showAllCustomersButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customersSaveChangesButton1)
                    .addComponent(customerDelete1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jPanel1.add(customersPanel1);
        customersPanel1.setBounds(110, 50, 1190, 730);

        addCustomerBackButton1.setText("< Back");
        addCustomerBackButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerBackButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(addCustomerBackButton1);
        addCustomerBackButton1.setBounds(230, 20, 87, 0);

        avatarIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kwanza/tukule/management/system/avatar.png"))); // NOI18N
        jPanel1.add(avatarIcon);
        avatarIcon.setBounds(950, 10, 40, 40);

        ordersSearchName1.setText("Search by name...");
        ordersSearchName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordersSearchName1ActionPerformed(evt);
            }
        });

        addOrderButton1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        addOrderButton1.setText("Add Order");
        addOrderButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderButton1ActionPerformed(evt);
            }
        });

        ordersTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "#", "Name", "Mobile No.", "Item", "Cost", "C/F/Debt"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ordersTable1);

        ordersPageTitle1.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        ordersPageTitle1.setText("Orders");

        showAllOrdersButton1.setText("All Orders");
        showAllOrdersButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllOrdersButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ordersPanel1Layout = new javax.swing.GroupLayout(ordersPanel1);
        ordersPanel1.setLayout(ordersPanel1Layout);
        ordersPanel1Layout.setHorizontalGroup(
            ordersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordersPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(ordersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ordersPanel1Layout.createSequentialGroup()
                        .addComponent(ordersPageTitle1)
                        .addGap(125, 125, 125)
                        .addComponent(ordersSearchName1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addOrderButton1))
                    .addGroup(ordersPanel1Layout.createSequentialGroup()
                        .addGroup(ordersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showAllOrdersButton1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 157, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ordersPanel1Layout.setVerticalGroup(
            ordersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordersPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(ordersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addOrderButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ordersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ordersPageTitle1)
                        .addComponent(ordersSearchName1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showAllOrdersButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(574, 574, 574))
        );

        jPanel1.add(ordersPanel1);
        ordersPanel1.setBounds(220, 0, 1190, 736);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1272, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuOpenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuOpenMousePressed
        Thread th = new Thread(){
            @Override
        public void run(){
           try{
               for(int a=0;a<=5;a++){
                   Thread.sleep(50);
                   if(a==1){
                       sideBar.setBounds(0,80,40,720);
                       menuOpen.setSize(0,0);
                       menuClose.setBounds(20,80,180,80);
                       jLabel2.setSize(0,0);
                   }
                       if(a==2){
                           sideBar.setBounds(0,80,80,720);
                       }
                       if(a==3){
                           sideBar.setBounds(0,80,120,720);
                       }
                       if(a==4){
                           sideBar.setBounds(0,80,160,720);
                       }
                       if(a==5){
                           sideBar.setBounds(0,80,200,720);
                       }
               }
           }catch(Exception ex){
               System.out.println(ex);
           } 
        }
    };th.start();
    }//GEN-LAST:event_menuOpenMousePressed

    private void menuCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuCloseMousePressed
        Thread th = new Thread(){
            @Override
        public void run(){
           try{
               for(int a=0;a<=5;a++){
                   Thread.sleep(50);
                   if(a==1){
                       sideBar.setBounds(0,80,200,720);            
               
                   }
                       if(a==2){
                           sideBar.setBounds(0,80,160,720);
                       }
                       if(a==3){
                           sideBar.setBounds(0,80,120,720);
                       }
                       if(a==4){
                           sideBar.setBounds(0,80,80,720);
                       }
                       if(a==5){
                           sideBar.setBounds(0,80,0,720);
                           menuOpen.setBounds(10,90,190,60);
                           jLabel2.setBounds(40,108,60,30);
                       }
               }
           }catch(Exception ex){
               System.out.println(ex);
           } 
        }
    };th.start();
     nullPanel.setBounds(210,60,1190,730);
     customersPanel.setSize(0,0);
     customersPanel1.setSize(0,0);
     ordersPanel1.setSize(0,0);
     summaryPanel.setSize(0,0);
     ordersPanel.setSize(0,0);
     stockPanel.setSize(0,0);
     printCustomerButton.setSize(0,0);
     addCustomerBackButton.setSize(0,0);
     addCustomerBackButton1.setSize(0,0);
     addStockBackButton.setSize(0,0);
     addCustomerPanel.setSize(0,0);
     addStockPanel.setSize(0,0);
     customerSideBar.setForeground(Color.black);
     stockSideBar.setForeground(Color.black);
     orderSideBar.setForeground(Color.black);
     summarySideBar.setForeground(Color.black);
    }//GEN-LAST:event_menuCloseMousePressed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
            Login lg = new Login();
            this.setVisible(false);
            lg.setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void customerSideBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerSideBarMousePressed
        String username;
        String query = "select * from users";
            try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query);
                rs=pst.executeQuery();
                while (rs.next()) {
                   role = rs.getString("role");
                   username = rs.getString("username");
                   if( username.equals(user)  && role.equals("Software") ){
                customersPanel.setBounds(210,60,1190,730);
                customersPanel1.setSize(0,0);
                printCustomerButton.setBounds(250,9,100,50);
                addStockBackButton.setSize(0,0);
                addCustomerBackButton.setSize(0,0);
                addCustomerBackButton1.setSize(0,0);
                addCustomerPanel.setSize(0,0);
                summaryPanel.setSize(0,0);
                ordersPanel.setSize(0,0);
                stockPanel.setSize(0,0);
                nullPanel.setSize(0,0);
                customerSideBar.setForeground(Color.white);
                stockSideBar.setForeground(Color.black);
                orderSideBar.setForeground(Color.black);
                summarySideBar.setForeground(Color.black);
                }
                   else if( username.equals(user)  && role.equals("CEO") ){
                customersPanel.setBounds(210,60,1190,730);
                customersPanel1.setSize(0,0);
                printCustomerButton.setBounds(250,9,100,50);
                addStockBackButton.setSize(0,0);
                addCustomerBackButton.setSize(0,0);
                addCustomerBackButton1.setSize(0,0);
                addCustomerPanel.setSize(0,0);
                summaryPanel.setSize(0,0);
                ordersPanel.setSize(0,0);
                stockPanel.setSize(0,0);
                nullPanel.setSize(0,0);
                customerSideBar.setForeground(Color.white);
                stockSideBar.setForeground(Color.black);
                orderSideBar.setForeground(Color.black);
                summarySideBar.setForeground(Color.black);
                }
                   else if( username.equals(user)  && role.equals("General operation manager") ){
                customersPanel.setBounds(210,60,1190,730);
                customersPanel1.setSize(0,0);
                printCustomerButton.setBounds(250,9,100,50);
                addStockBackButton.setSize(0,0);
                addCustomerBackButton.setSize(0,0);
                addCustomerBackButton1.setSize(0,0);
                addCustomerPanel.setSize(0,0);
                summaryPanel.setSize(0,0);
                ordersPanel.setSize(0,0);
                stockPanel.setSize(0,0);
                nullPanel.setSize(0,0);
                customerSideBar.setForeground(Color.white);
                stockSideBar.setForeground(Color.black);
                orderSideBar.setForeground(Color.black);
                summarySideBar.setForeground(Color.black);
                }

                   else if( username.equals(user)  && role.equals("admin") ){
                customersPanel1.setBounds(210,60,1190,730);
                printCustomerButton.setBounds(250,9,100,50);
                customersPanel.setSize(0,0);
                addStockBackButton.setSize(0,0);
                addCustomerBackButton.setSize(0,0);
                addCustomerBackButton1.setSize(0,0);
                addCustomerPanel.setSize(0,0);
                summaryPanel.setSize(0,0);
                ordersPanel.setSize(0,0);
                stockPanel.setSize(0,0);
                nullPanel.setSize(0,0);
                customerSideBar.setForeground(Color.white);
                stockSideBar.setForeground(Color.black);
                orderSideBar.setForeground(Color.black);
                summarySideBar.setForeground(Color.black);
  
                }
                }       
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        String query2 = "select * from customers";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);               
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable1.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);               
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customerSideBarMousePressed

    private void stockSideBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockSideBarMousePressed
      stockPanel.setBounds(210,60,1190,730);
      printCustomerButton.setSize(0,0);
      addStockBackButton.setSize(0,0);
      addCustomerBackButton.setSize(0,0);
      addCustomerPanel.setSize(0,0);
      customersPanel1.setSize(0,0);
      ordersPanel1.setSize(0,0);
      customersPanel.setSize(0,0);
      ordersPanel.setSize(0,0);
      summaryPanel.setSize(0,0);
      nullPanel.setSize(0,0);
      stockSideBar.setForeground(Color.white);
      orderSideBar.setForeground(Color.black);
      summarySideBar.setForeground(Color.black);
      customerSideBar.setForeground(Color.black);
       String query2 = "select * from stock";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)stockTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Price"),
                                rs.getString("Quantity")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_stockSideBarMousePressed

    private void orderSideBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderSideBarMousePressed
       String username;
        String query = "select * from users";
            try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query);
                rs=pst.executeQuery();
                while (rs.next()) {
                   role = rs.getString("role");
                   username = rs.getString("username");
                   if( username.equals(user)  && role.equals("Software") ){
        ordersPanel.setBounds(210,60,1190,730);
      printCustomerButton.setSize(0,0);
      addStockBackButton.setSize(0,0);
      addCustomerBackButton.setSize(0,0);
      addCustomerBackButton1.setSize(0,0);
      addCustomerPanel.setSize(0,0);
      summaryPanel.setSize(0,0);
      customersPanel.setSize(0,0);
      stockPanel.setSize(0,0);
      nullPanel.setSize(0,0);
      orderSideBar.setForeground(Color.white);
      summarySideBar.setForeground(Color.black);
      stockSideBar.setForeground(Color.black);
      customerSideBar.setForeground(Color.black);
      }    
           else if( username.equals(user)  && role.equals("CEO") ) 
               {
        ordersPanel.setBounds(210,60,1190,730);
         printCustomerButton.setSize(0,0);
         addStockBackButton.setSize(0,0);
         addCustomerBackButton.setSize(0,0);
         addCustomerBackButton1.setSize(0,0);
         addCustomerPanel.setSize(0,0);
         summaryPanel.setSize(0,0);
         customersPanel.setSize(0,0);
         stockPanel.setSize(0,0);
         nullPanel.setSize(0,0);
         orderSideBar.setForeground(Color.white);
         summarySideBar.setForeground(Color.black);
         stockSideBar.setForeground(Color.black);
         customerSideBar.setForeground(Color.black);
         }    
         else if( username.equals(user)  && role.equals("General operation manager") ) 
               {
        ordersPanel.setBounds(210,60,1190,730);
         printCustomerButton.setSize(0,0);
         addStockBackButton.setSize(0,0);
         addCustomerBackButton.setSize(0,0);
         addCustomerBackButton1.setSize(0,0);
         addCustomerPanel.setSize(0,0);
         summaryPanel.setSize(0,0);
         customersPanel.setSize(0,0);
         stockPanel.setSize(0,0);
         nullPanel.setSize(0,0);
         orderSideBar.setForeground(Color.white);
         summarySideBar.setForeground(Color.black);
         stockSideBar.setForeground(Color.black);
         customerSideBar.setForeground(Color.black);
         }  
          else if( username.equals(user)  && role.equals("admin") ){
         ordersPanel1.setBounds(210,60,1190,730);
         printCustomerButton.setSize(0,0);
         addStockBackButton.setSize(0,0);
         addCustomerBackButton.setSize(0,0);
         addCustomerBackButton1.setSize(0,0);
         addCustomerPanel.setSize(0,0);
         summaryPanel.setSize(0,0);
         customersPanel.setSize(0,0);
         stockPanel.setSize(0,0);
         nullPanel.setSize(0,0);
         orderSideBar.setForeground(Color.white);
         summarySideBar.setForeground(Color.black);
         stockSideBar.setForeground(Color.black);
         customerSideBar.setForeground(Color.black);
                }
           }
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_orderSideBarMousePressed

    private void summarySideBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_summarySideBarMousePressed
      summaryPanel.setBounds(210,60,1190,730);
      addCustomerPanel.setSize(0,0);
      printCustomerButton.setSize(0,0);
      addStockBackButton.setSize(0,0);
      addCustomerBackButton.setSize(0,0);
      customersPanel1.setSize(0,0);
      ordersPanel1.setSize(0,0);
      customersPanel.setSize(0,0);
      ordersPanel.setSize(0,0);
      stockPanel.setSize(0,0);
      nullPanel.setSize(0,0);
      summarySideBar.setForeground(Color.white);
      orderSideBar.setForeground(Color.black);
      orderSideBar.setForeground(Color.black);
      orderSideBar.setForeground(Color.black);
    }//GEN-LAST:event_summarySideBarMousePressed

    private void customerSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchNameActionPerformed
                   String searched = customerSearchName.getText();
            String query2 = "select * from customers where Name LIKE '"+searched+"%'";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);               
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customerSearchNameActionPerformed

    private void stockSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockSearchNameActionPerformed
        String searched = stockSearchName.getText();
        String query2 = "select * from stock where Name LIKE '"+searched+"%'";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)stockTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Price"),
                                rs.getString("Quantity")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_stockSearchNameActionPerformed

    private void ordersSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordersSearchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ordersSearchNameActionPerformed

    private void addStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStockButtonActionPerformed
        addStockPanel.setBounds(210,60,1190,730);
        printCustomerButton.setSize(0,0);
        addStockBackButton.setBounds(250,20,97,29);
        summaryPanel.setSize(0,0);
        addCustomerPanel.setSize(0,0);
        addCustomerBackButton.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        ordersPanel.setSize(0,0);
        stockPanel.setSize(0,0);
        nullPanel.setSize(0,0);
        customersPanel.setSize(0,0);
    }//GEN-LAST:event_addStockButtonActionPerformed

    private void addOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderButtonActionPerformed
        // TODO add your handling code he
    }//GEN-LAST:event_addOrderButtonActionPerformed

    private void addCustomerBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerBackButtonActionPerformed
        customersPanel.setBounds(210,60,1190,730);
        printCustomerButton.setBounds(250,9,100,50);
        addCustomerBackButton.setSize(0,0);
        addStockBackButton.setSize(0,0);
        addCustomerPanel.setSize(0,0);
        addStockPanel.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        summaryPanel.setSize(0,0);
        ordersPanel.setSize(0,0);
        stockPanel.setSize(0,0);
        nullPanel.setSize(0,0);
    }//GEN-LAST:event_addCustomerBackButtonActionPerformed

    private void addStockBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStockBackButtonActionPerformed
        stockPanel.setBounds(210,60,1190,730);
        printCustomerButton.setSize(0,0);
        addStockBackButton.setSize(0,0);
        addCustomerBackButton.setSize(0,0);
        addCustomerPanel.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        summaryPanel.setSize(0,0);
        ordersPanel.setSize(0,0);
        addStockPanel.setSize(0,0);
        nullPanel.setSize(0,0);
    }//GEN-LAST:event_addStockBackButtonActionPerformed

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed
        addCustomerPanel.setBounds(210,60,1190,730);
        addCustomerBackButton.setBounds(250,20,97,29);
        printCustomerButton.setSize(0,0);
        summaryPanel.setSize(0,0);
        addStockBackButton.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        addStockPanel.setSize(0,0);
        ordersPanel.setSize(0,0);
        stockPanel.setSize(0,0);
        nullPanel.setSize(0,0);
        customersPanel.setSize(0,0);
    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void addCustomerNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustomerNumberTextFieldActionPerformed

    private void printCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printCustomerButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printCustomerButtonActionPerformed

    private void addCustomerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButton1ActionPerformed
        addCustomerPanel.setBounds(210,60,1190,730);
        addCustomerBackButton1.setBounds(250,20,97,29);
        printCustomerButton.setSize(0,0);
        summaryPanel.setSize(0,0);
        addStockBackButton.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        addStockPanel.setSize(0,0);
        ordersPanel.setSize(0,0);
        stockPanel.setSize(0,0);
        nullPanel.setSize(0,0);
        customersPanel.setSize(0,0);
    }//GEN-LAST:event_addCustomerButton1ActionPerformed

    private void customerSearchName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchName1ActionPerformed
        String searched = customerSearchName1.getText();
            String query2 = "select * from customers where Name LIKE '"+searched+"%'";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable1.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);               
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customerSearchName1ActionPerformed

    private void ordersSearchName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordersSearchName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ordersSearchName1ActionPerformed

    private void addOrderButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderButton1ActionPerformed
        
    }//GEN-LAST:event_addOrderButton1ActionPerformed

    private void addCustomerBackButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerBackButton1ActionPerformed
        customersPanel1.setBounds(210,60,1190,730);
        printCustomerButton.setBounds(250,9,100,50);
        addCustomerBackButton.setSize(0,0);
        addCustomerBackButton1.setSize(0,0);
        addStockBackButton.setSize(0,0);
        addCustomerPanel.setSize(0,0);
        addStockPanel.setSize(0,0);
        customersPanel.setSize(0,0);
        ordersPanel1.setSize(0,0);
        summaryPanel.setSize(0,0);
        ordersPanel.setSize(0,0);
        stockPanel.setSize(0,0);
        nullPanel.setSize(0,0);
    }//GEN-LAST:event_addCustomerBackButton1ActionPerformed

    private void addCustomerSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerSaveButtonActionPerformed
        try{
            String query = "INSERT INTO `customers`(`Name`, `Number`, `Deliverer`, `Location`) VALUES (?,?,?,?)";
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
            pst = con.prepareStatement(query);
            pst.setString(1,addCustomerNameTextField.getText());
            pst.setString(2,addCustomerNumberTextField.getText());
            pst.setString(3,addCustomerDelivererTextField.getText());
            pst.setString(4,addCustomerLocationTextField.getText());
            pst.executeUpdate();
            customersPanel.setBounds(210,60,1190,730);
        printCustomerButton.setBounds(250,9,100,50);
        addCustomerBackButton.setSize(0,0);
        addStockBackButton.setSize(0,0);
        addCustomerPanel.setSize(0,0);
        addStockPanel.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        summaryPanel.setSize(0,0);
        ordersPanel.setSize(0,0);
        stockPanel.setSize(0,0);
        nullPanel.setSize(0,0);
                JOptionPane.showMessageDialog(this, "Customer Added.","Success",JOptionPane.INFORMATION_MESSAGE,icon);       
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
        String query2 = "select * from customers";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_addCustomerSaveButtonActionPerformed

    private void customersSaveChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersSaveChangesButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)customersTable.getModel();
        int selectedRowIndex = customersTable.getSelectedRow();
        int row = customersTable.getSelectedRow();
        String cell = customersTable.getModel().getValueAt(row, 0).toString();
        String name = model.getValueAt(selectedRowIndex, 1).toString();
        String number = model.getValueAt(selectedRowIndex, 2).toString();
        String location = model.getValueAt(selectedRowIndex, 3).toString();
        String deliverer = model.getValueAt(selectedRowIndex, 4).toString();
        String sql = "update customers set Name = '"+name+"', Number='"+number+"',Location='"+location+"',Deliverer='"+deliverer+"' where id =" + cell;
        try{
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Customer Updated.","Success",JOptionPane.INFORMATION_MESSAGE,icon); 
            }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
        String query2 = "select * from customers";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customersSaveChangesButtonActionPerformed

    private void addStockSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStockSaveButtonActionPerformed
        try{
        String query = "INSERT INTO `stock`(`Name`, `Price`, `Quantity`) VALUES (?,?,?)";
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
            pst = con.prepareStatement(query);
            pst.setString(1,addStockNameTextField.getText());
            pst.setString(2,addStockPriceTextField.getText());
            pst.setString(3,addStockQuantityTextField.getText());
            pst.executeUpdate();
            stockPanel.setBounds(210,60,1190,730);
        printCustomerButton.setSize(0,0);
        addStockBackButton.setSize(0,0);
        addCustomerBackButton.setSize(0,0);
        addCustomerPanel.setSize(0,0);
        customersPanel1.setSize(0,0);
        ordersPanel1.setSize(0,0);
        summaryPanel.setSize(0,0);
        ordersPanel.setSize(0,0);
        addStockPanel.setSize(0,0);
        nullPanel.setSize(0,0);
                JOptionPane.showMessageDialog(this, "Stock Added.","Success",JOptionPane.INFORMATION_MESSAGE,icon); 
            }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
        String query2 = "select * from stock";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)stockTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Price"),
                                rs.getString("Quantity")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_addStockSaveButtonActionPerformed

    private void stockSaveChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockSaveChangesButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)stockTable.getModel();
        int selectedRowIndex = stockTable.getSelectedRow();
        int row = stockTable.getSelectedRow();
        String cell = stockTable.getModel().getValueAt(row, 0).toString();
        String name = model.getValueAt(selectedRowIndex, 1).toString();
        String price = model.getValueAt(selectedRowIndex, 2).toString();
        String quantity = model.getValueAt(selectedRowIndex, 3).toString();
        String sql = "update stock set Name = '"+name+"', Price='"+price+"',Quantity='"+quantity+"' where id =" + cell;
        try{
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Stock Updated.","Success",JOptionPane.INFORMATION_MESSAGE,icon); 
            }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
        String query2 = "select * from stock";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)stockTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Price"),
                                rs.getString("Quantity")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_stockSaveChangesButtonActionPerformed

    private void customerSearchDelivererActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchDelivererActionPerformed
        String searched = customerSearchDeliverer.getText();
            String query2 = "select * from customers where Deliverer LIKE '"+searched+"%'";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);               
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customerSearchDelivererActionPerformed

    private void showAllCustomersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllCustomersButtonActionPerformed
        String query2 = "select * from customers ";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);               
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_showAllCustomersButtonActionPerformed

    private void showAllStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllStockButtonActionPerformed
        String query2 = "select * from stock";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)stockTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Price"),
                                rs.getString("Quantity")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_showAllStockButtonActionPerformed

    private void customersSaveChangesButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersSaveChangesButton1ActionPerformed
         DefaultTableModel model = (DefaultTableModel)customersTable1.getModel();
        int selectedRowIndex = customersTable1.getSelectedRow();
        int row = customersTable1.getSelectedRow();
        String cell = customersTable1.getModel().getValueAt(row, 0).toString();
        String name = model.getValueAt(selectedRowIndex, 1).toString();
        String number = model.getValueAt(selectedRowIndex, 2).toString();
        String location = model.getValueAt(selectedRowIndex, 3).toString();
        String deliverer = model.getValueAt(selectedRowIndex, 4).toString();
        String sql = "update customers set Name = '"+name+"', Number='"+number+"',Location='"+location+"',Deliverer='"+deliverer+"' where id =" + cell;
        try{
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Customer Updated.","Success",JOptionPane.INFORMATION_MESSAGE,icon); 
            }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
        String query2 = "select * from customers";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable1.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customersSaveChangesButton1ActionPerformed

    private void customerSearchDeliverer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchDeliverer1ActionPerformed
        String searched = customerSearchDeliverer1.getText();
            String query2 = "select * from customers where Deliverer LIKE '"+searched+"%'";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable1.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);               
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customerSearchDeliverer1ActionPerformed

    private void showAllCustomersButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllCustomersButton1ActionPerformed
        String query2 = "select * from customers ";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable1.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);               
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_showAllCustomersButton1ActionPerformed

    private void showAllOrdersButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllOrdersButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showAllOrdersButton1ActionPerformed

    private void showAllOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllOrdersButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showAllOrdersButtonActionPerformed

    private void blacklistedSaveChangsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blacklistedSaveChangsButtonActionPerformed
        
    }//GEN-LAST:event_blacklistedSaveChangsButtonActionPerformed

    private void customerBlacklistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerBlacklistActionPerformed
        int row = customersTable.getSelectedRow();
        String cell = customersTable.getModel().getValueAt(row, 0).toString();
        String sql = "update customers set Status = 'blacklisted' where id =" + cell;
        try{
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Customer Blacklisted.","Success",JOptionPane.INFORMATION_MESSAGE,icon); 
            }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
        String query2 = "select * from customers";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customerBlacklistActionPerformed

    private void customerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerDeleteActionPerformed
        int row = customersTable.getSelectedRow();
        String cell = customersTable.getModel().getValueAt(row, 0).toString();
        String sql = "Delete from customers where id =" + cell;
        try{
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Delete Selected Customer?","Delete",JOptionPane.INFORMATION_MESSAGE,icon); 
            }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
        String query2 = "select * from customers";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customerDeleteActionPerformed

    private void customerDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerDelete1ActionPerformed
        int row = customersTable1.getSelectedRow();
        String cell = customersTable1.getModel().getValueAt(row, 0).toString();
        String sql = "Delete from customers where id =" + cell;
        try{
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Delete selected Customer?","Delete",JOptionPane.INFORMATION_MESSAGE,icon); 
            }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
        String query2 = "select * from customers";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)customersTable1.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Number"),
                                rs.getString("Location"),
                                rs.getString("Deliverer"),
                                rs.getString("Status")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_customerDelete1ActionPerformed

    private void stockDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockDeleteButtonActionPerformed
        int row = stockTable.getSelectedRow();
        String cell = stockTable.getModel().getValueAt(row, 0).toString();
        String sql = "Delete from stock where id =" + cell;
        try{
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Delete Selected Stock?","Delete",JOptionPane.INFORMATION_MESSAGE,icon); 
            }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex,"Oops!Something went wrong!",JOptionPane.INFORMATION_MESSAGE,icon);
        }
       String query2 = "select * from stock";
        try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Kwanza Tukule?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","samokoth.1999");
                pst = con.prepareStatement(query2);
                rs=pst.executeQuery();
                DefaultTableModel tm=(DefaultTableModel)stockTable.getModel();
                tm.setRowCount(0);
                while(rs.next()){
                    Object o[]={rs.getInt("id"),
                                rs.getString("Name"),
                                rs.getString("Price"),
                                rs.getString("Quantity")};
                    tm.addRow(o);         
                }
              } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_stockDeleteButtonActionPerformed

    private void blacklistedDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blacklistedDeleteActionPerformed

    }//GEN-LAST:event_blacklistedDeleteActionPerformed

    private void blacklistedRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blacklistedRestoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blacklistedRestoreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomerBackButton;
    private javax.swing.JButton addCustomerBackButton1;
    private javax.swing.JButton addCustomerButton;
    private javax.swing.JButton addCustomerButton1;
    private javax.swing.JLabel addCustomerDelivererLabel;
    private javax.swing.JTextField addCustomerDelivererTextField;
    private javax.swing.JLabel addCustomerLocationLabel;
    private javax.swing.JTextField addCustomerLocationTextField;
    private javax.swing.JLabel addCustomerNameLabel;
    private javax.swing.JTextField addCustomerNameTextField;
    private javax.swing.JLabel addCustomerNumberLabel;
    private javax.swing.JTextField addCustomerNumberTextField;
    private javax.swing.JLabel addCustomerPageTitle;
    private javax.swing.JPanel addCustomerPanel;
    private javax.swing.JButton addCustomerSaveButton;
    private javax.swing.JButton addOrderButton;
    private javax.swing.JButton addOrderButton1;
    private javax.swing.JButton addStockBackButton;
    private javax.swing.JButton addStockButton;
    private javax.swing.JLabel addStockNameLabel;
    private javax.swing.JTextField addStockNameTextField;
    private javax.swing.JLabel addStockPageTitle;
    private javax.swing.JPanel addStockPanel;
    private javax.swing.JLabel addStockPriceLabel;
    private javax.swing.JTextField addStockPriceTextField;
    private javax.swing.JLabel addStockQuantityLabel;
    private javax.swing.JTextField addStockQuantityTextField;
    private javax.swing.JButton addStockSaveButton;
    private javax.swing.JLabel avatarIcon;
    private javax.swing.JTable blackListedTable;
    private javax.swing.JTable blackListedTable1;
    private javax.swing.JButton blacklistedDelete;
    private javax.swing.JButton blacklistedRestore;
    private javax.swing.JButton blacklistedSaveChangsButton;
    private javax.swing.JLabel cashInHandLabel;
    private javax.swing.JButton customerBlacklist;
    private javax.swing.JButton customerDelete;
    private javax.swing.JButton customerDelete1;
    private javax.swing.JTextField customerSearchDeliverer;
    private javax.swing.JTextField customerSearchDeliverer1;
    private javax.swing.JTextField customerSearchName;
    private javax.swing.JTextField customerSearchName1;
    private javax.swing.JLabel customerSideBar;
    private javax.swing.JLabel customersPageTitle;
    private javax.swing.JLabel customersPageTitle1;
    private javax.swing.JPanel customersPanel;
    private javax.swing.JPanel customersPanel1;
    private javax.swing.JButton customersSaveChangesButton;
    private javax.swing.JButton customersSaveChangesButton1;
    private javax.swing.JTable customersTable;
    private javax.swing.JTable customersTable1;
    private javax.swing.JLabel expensesTodayLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel menuClose;
    private javax.swing.JLabel menuOpen;
    private javax.swing.JPanel nullPanel;
    private javax.swing.JLabel orderSideBar;
    private javax.swing.JLabel ordersPageTitle;
    private javax.swing.JLabel ordersPageTitle1;
    private javax.swing.JPanel ordersPanel;
    private javax.swing.JPanel ordersPanel1;
    private javax.swing.JButton ordersSaveButton;
    private javax.swing.JTextField ordersSearchName;
    private javax.swing.JTextField ordersSearchName1;
    private javax.swing.JTable ordersTable;
    private javax.swing.JTable ordersTable1;
    private javax.swing.JButton printCustomerButton;
    private javax.swing.JLabel revenueRealizedTodayLabel;
    private javax.swing.JButton showAllCustomersButton;
    private javax.swing.JButton showAllCustomersButton1;
    private javax.swing.JButton showAllOrdersButton;
    private javax.swing.JButton showAllOrdersButton1;
    private javax.swing.JButton showAllStockButton;
    private javax.swing.JPanel sideBar;
    private javax.swing.JButton stockDeleteButton;
    private javax.swing.JLabel stockPageTitle;
    private javax.swing.JPanel stockPanel;
    private javax.swing.JButton stockSaveChangesButton;
    private javax.swing.JTextField stockSearchName;
    private javax.swing.JLabel stockSideBar;
    private javax.swing.JTable stockTable;
    private javax.swing.JLabel summaryPageTitle;
    private javax.swing.JPanel summaryPanel;
    private javax.swing.JLabel summarySideBar;
    private javax.swing.JLabel totalBankedTodayLabel;
    private javax.swing.JLabel totalDebtPaidInCashLabel;
    private javax.swing.JLabel totalDebtPaidInMpesaLabel;
    private javax.swing.JLabel totalPaidInCashTodayLabel;
    private javax.swing.JLabel totalPaidViaMpesaTodayLabel;
    private javax.swing.JLabel totalSalesTodayLabel;
    private javax.swing.JLabel userLabel;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kwanza tukule icon.png")));
    }
}
